{"uid":"8edec3dd2d49b40b","name":"test_ephemeral_multi","fullName":"tests.functional.adapter.test_ephemeral.TestEphemeralMultiFirebolt#test_ephemeral_multi","historyId":"9288ac85bad9c6da313e8c30dd9a9167","time":{"start":1753447985579,"stop":1753447987424,"duration":1845},"status":"failed","statusMessage":"AssertionError: assert \"CREATETABLEI...der='Female')\" == \"CREATEDIMENS...der='Female')\"\n  - CREATEDIMENSIONTABLEIFNOTEXISTSdouble_dependentAS(with__dbt__cte__baseas(select*frompublic.seed),__dbt__cte__base_copyas(select*from__dbt__cte__base)--base_copyjustpullsfrombase.Makesurethelisted--graphofCTEsallsharethesamedbt_cte__basecteselect*from__dbt__cte__basewheregender='Male'unionallselect*from__dbt__cte__base_copywheregender='Female')\n  ?       ---------\n  + CREATETABLEIFNOTEXISTSdouble_dependentAS(with__dbt__cte__baseas(select*frompublic.seed),__dbt__cte__base_copyas(select*from__dbt__cte__base)--base_copyjustpullsfrombase.Makesurethelisted--graphofCTEsallsharethesamedbt_cte__basecteselect*from__dbt__cte__basewheregender='Male'unionallselect*from__dbt__cte__base_copywheregender='Female')","statusTrace":"self = <test_ephemeral.TestEphemeralMultiFirebolt object at 0x7f1755ae5cf0>\nproject = <dbt.tests.fixtures.project.TestProjInfo object at 0x7f1753f2f850>\n\n    def test_ephemeral_multi(self, project):\n        run_dbt(['seed'])\n        results = run_dbt(['run'])\n        assert len(results) == 3\n    \n        check_relations_equal(project.adapter, ['seed', 'dependent'])\n        check_relations_equal(project.adapter, ['seed', 'double_dependent'])\n        check_relations_equal(project.adapter, ['seed', 'super_dependent'])\n        assert os.path.exists('./target/run/test/models/double_dependent.sql')\n        with open('./target/run/test/models/double_dependent.sql', 'r') as fp:\n            sql_file = fp.read()\n    \n        sql_file = re.sub(r'\\d+', '', sql_file)\n        expected_sql = (\n            'CREATE DIMENSION TABLE IF NOT EXISTS double_dependent AS ('\n            'with __dbt__cte__base as ('\n            'select * from public.seed'\n            '),  __dbt__cte__base_copy as ('\n            'select * from __dbt__cte__base'\n            ')-- base_copy just pulls from base. Make sure the listed'\n            '-- graph of CTEs all share the same dbt_cte__base cte'\n            \"select * from __dbt__cte__base where gender = 'Male'\"\n            'union all'\n            \"select * from __dbt__cte__base_copy where gender = 'Female'\"\n            ')'\n        )\n        sql_file = ''.join(sql_file.split())\n        expected_sql = ''.join(expected_sql.split())\n>       assert sql_file == expected_sql\nE       assert \"CREATETABLEI...der='Female')\" == \"CREATEDIMENS...der='Female')\"\nE         - CREATEDIMENSIONTABLEIFNOTEXISTSdouble_dependentAS(with__dbt__cte__baseas(select*frompublic.seed),__dbt__cte__base_copyas(select*from__dbt__cte__base)--base_copyjustpullsfrombase.Makesurethelisted--graphofCTEsallsharethesamedbt_cte__basecteselect*from__dbt__cte__basewheregender='Male'unionallselect*from__dbt__cte__base_copywheregender='Female')\nE         ?       ---------\nE         + CREATETABLEIFNOTEXISTSdouble_dependentAS(with__dbt__cte__baseas(select*frompublic.seed),__dbt__cte__base_copyas(select*from__dbt__cte__base)--base_copyjustpullsfrombase.Makesurethelisted--graphofCTEsallsharethesamedbt_cte__basecteselect*from__dbt__cte__basewheregender='Male'unionallselect*from__dbt__cte__base_copywheregender='Female')\n\n/home/runner/work/dbt-firebolt/dbt-firebolt/tests/functional/adapter/test_ephemeral.py:84: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"shared_data_dir","time":{"start":1753447905044,"stop":1753447905044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tmpdir_factory","time":{"start":1753447905044,"stop":1753447905044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_data_dir","time":{"start":1753447985476,"stop":1753447985477,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_root","time":{"start":1753447985477,"stop":1753447985478,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"initialization","time":{"start":1753447985477,"stop":1753447985477,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"environment","time":{"start":1753447985477,"stop":1753447985477,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clean_up_logging","time":{"start":1753447985477,"stop":1753447985477,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_root","time":{"start":1753447985478,"stop":1753447985478,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dbt_profile_target","time":{"start":1753447985478,"stop":1753447985479,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"prefix","time":{"start":1753447985478,"stop":1753447985478,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"unique_schema","time":{"start":1753447985478,"stop":1753447985478,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_yml","time":{"start":1753447985479,"stop":1753447985480,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dbt_profile_data","time":{"start":1753447985479,"stop":1753447985479,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_config_update","time":{"start":1753447985479,"stop":1753447985479,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"logs_dir","time":{"start":1753447985480,"stop":1753447985480,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_config_update","time":{"start":1753447985480,"stop":1753447985480,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dbt_project_yml","time":{"start":1753447985480,"stop":1753447985480,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"adapter","time":{"start":1753447985481,"stop":1753447985515,"duration":34},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_setup","time":{"start":1753447985515,"stop":1753447985576,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_config","time":{"start":1753447985515,"stop":1753447985515,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"models","time":{"start":1753447985576,"stop":1753447985576,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"macros","time":{"start":1753447985576,"stop":1753447985576,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"snapshots","time":{"start":1753447985576,"stop":1753447985576,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"properties","time":{"start":1753447985576,"stop":1753447985576,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"analyses","time":{"start":1753447985577,"stop":1753447985577,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"seeds","time":{"start":1753447985577,"stop":1753447985577,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tests","time":{"start":1753447985577,"stop":1753447985577,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"packages","time":{"start":1753447985577,"stop":1753447985577,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dependencies","time":{"start":1753447985577,"stop":1753447985577,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"packages_yml","time":{"start":1753447985577,"stop":1753447985577,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dependencies_yml","time":{"start":1753447985577,"stop":1753447985577,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"selectors","time":{"start":1753447985577,"stop":1753447985577,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_files","time":{"start":1753447985577,"stop":1753447985578,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"selectors_yml","time":{"start":1753447985577,"stop":1753447985577,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1753447985578,"stop":1753447985578,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"seeds","time":{"start":1753447987910,"stop":1753447987910,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert \"CREATETABLEI...der='Female')\" == \"CREATEDIMENS...der='Female')\"\n  - CREATEDIMENSIONTABLEIFNOTEXISTSdouble_dependentAS(with__dbt__cte__baseas(select*frompublic.seed),__dbt__cte__base_copyas(select*from__dbt__cte__base)--base_copyjustpullsfrombase.Makesurethelisted--graphofCTEsallsharethesamedbt_cte__basecteselect*from__dbt__cte__basewheregender='Male'unionallselect*from__dbt__cte__base_copywheregender='Female')\n  ?       ---------\n  + CREATETABLEIFNOTEXISTSdouble_dependentAS(with__dbt__cte__baseas(select*frompublic.seed),__dbt__cte__base_copyas(select*from__dbt__cte__base)--base_copyjustpullsfrombase.Makesurethelisted--graphofCTEsallsharethesamedbt_cte__basecteselect*from__dbt__cte__basewheregender='Male'unionallselect*from__dbt__cte__base_copywheregender='Female')","statusTrace":"self = <test_ephemeral.TestEphemeralMultiFirebolt object at 0x7f1755ae5cf0>\nproject = <dbt.tests.fixtures.project.TestProjInfo object at 0x7f1753f2f850>\n\n    def test_ephemeral_multi(self, project):\n        run_dbt(['seed'])\n        results = run_dbt(['run'])\n        assert len(results) == 3\n    \n        check_relations_equal(project.adapter, ['seed', 'dependent'])\n        check_relations_equal(project.adapter, ['seed', 'double_dependent'])\n        check_relations_equal(project.adapter, ['seed', 'super_dependent'])\n        assert os.path.exists('./target/run/test/models/double_dependent.sql')\n        with open('./target/run/test/models/double_dependent.sql', 'r') as fp:\n            sql_file = fp.read()\n    \n        sql_file = re.sub(r'\\d+', '', sql_file)\n        expected_sql = (\n            'CREATE DIMENSION TABLE IF NOT EXISTS double_dependent AS ('\n            'with __dbt__cte__base as ('\n            'select * from public.seed'\n            '),  __dbt__cte__base_copy as ('\n            'select * from __dbt__cte__base'\n            ')-- base_copy just pulls from base. Make sure the listed'\n            '-- graph of CTEs all share the same dbt_cte__base cte'\n            \"select * from __dbt__cte__base where gender = 'Male'\"\n            'union all'\n            \"select * from __dbt__cte__base_copy where gender = 'Female'\"\n            ')'\n        )\n        sql_file = ''.join(sql_file.split())\n        expected_sql = ''.join(expected_sql.split())\n>       assert sql_file == expected_sql\nE       assert \"CREATETABLEI...der='Female')\" == \"CREATEDIMENS...der='Female')\"\nE         - CREATEDIMENSIONTABLEIFNOTEXISTSdouble_dependentAS(with__dbt__cte__baseas(select*frompublic.seed),__dbt__cte__base_copyas(select*from__dbt__cte__base)--base_copyjustpullsfrombase.Makesurethelisted--graphofCTEsallsharethesamedbt_cte__basecteselect*from__dbt__cte__basewheregender='Male'unionallselect*from__dbt__cte__base_copywheregender='Female')\nE         ?       ---------\nE         + CREATETABLEIFNOTEXISTSdouble_dependentAS(with__dbt__cte__baseas(select*frompublic.seed),__dbt__cte__base_copyas(select*from__dbt__cte__base)--base_copyjustpullsfrombase.Makesurethelisted--graphofCTEsallsharethesamedbt_cte__basecteselect*from__dbt__cte__basewheregender='Male'unionallselect*from__dbt__cte__base_copywheregender='Female')\n\n/home/runner/work/dbt-firebolt/dbt-firebolt/tests/functional/adapter/test_ephemeral.py:84: AssertionError","steps":[],"attachments":[{"uid":"e0995180d597d3ac","name":"log","source":"e0995180d597d3ac.txt","type":"text/plain","size":17194},{"uid":"80ba8d15a135011d","name":"stdout","source":"80ba8d15a135011d.txt","type":"text/plain","size":2053},{"uid":"c378a2b7584a19c4","name":"stderr","source":"c378a2b7584a19c4.txt","type":"text/plain","size":14383}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"project_setup::0","time":{"start":1753447987430,"stop":1753447987805,"duration":375},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"adapter::0","time":{"start":1753447987806,"stop":1753447987806,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_yml::0","time":{"start":1753447987807,"stop":1753447987807,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"logs_dir::0","time":{"start":1753447987807,"stop":1753447987807,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.functional.adapter"},{"name":"suite","value":"test_ephemeral"},{"name":"subSuite","value":"TestEphemeralMultiFirebolt"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"4351-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.functional.adapter.test_ephemeral"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"8edec3dd2d49b40b.json","parameterValues":[]}