{"uid":"b62684a0412fee72","name":"test_references","fullName":"tests.functional.adapter.test_basic.TestDocsGenReferencesFirebolt#test_references","historyId":"780a44c2b193969f3f7908213cd1cd90","time":{"start":1722462227190,"stop":1722462232489,"duration":5299},"status":"failed","statusMessage":"AssertionError: Key 'metadata' in 'seed.test.seed' did not match\nassert {'comment': N...r': None, ...} == {'comment': N...r': None, ...}\n  Omitting 5 identical items, use -vv to show\n  Differing items:\n  {'type': 'DIMENSION'} != {'type': 'BASE TABLE'}\n  Full diff:\n    {\n     'comment': None,\n     'database': 'integration_testing__1722461861',\n     'name': 'seed',\n     'owner': None,\n     'schema': 'public',\n  -  'type': 'BASE TABLE',\n  +  'type': 'DIMENSION',\n    }","statusTrace":"self = <test_basic.TestDocsGenReferencesFirebolt object at 0x7f1b679d1940>\nproject = <dbt.tests.fixtures.project.TestProjInfo object at 0x7f1b662eddc0>\nexpected_catalog = {'nodes': {'model.test.ephemeral_summary': {'columns': {'ct': {'comment': None, 'index': 2, 'name': 'ct', 'type': AnyS...e', 'id': 'has_stats', 'include': False, 'label': 'Has Stats?', ...}}, 'unique_id': 'source.test.my_source.my_table'}}}\n\n    def test_references(self, project, expected_catalog):\n        start_time = run_and_generate(project)\n>       verify_catalog(project, expected_catalog, start_time)\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/dbt/tests/adapter/basic/test_docs_generate.py:480: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nproject = <dbt.tests.fixtures.project.TestProjInfo object at 0x7f1b662eddc0>\nexpected_catalog = {'nodes': {'model.test.ephemeral_summary': {'columns': {'ct': {'comment': None, 'index': 2, 'name': 'ct', 'type': AnyS...e', 'id': 'has_stats', 'include': False, 'label': 'Has Stats?', ...}}, 'unique_id': 'source.test.my_source.my_table'}}}\nstart_time = datetime.datetime(2024, 7, 31, 21, 43, 50, 978753)\n\n    def verify_catalog(project, expected_catalog, start_time):\n        # get the catalog.json\n        catalog_path = os.path.join(project.project_root, \"target\", \"catalog.json\")\n        assert os.path.exists(catalog_path)\n        catalog = get_artifact(catalog_path)\n    \n        # verify the catalog\n        assert set(catalog) == {\"errors\", \"metadata\", \"nodes\", \"sources\"}\n        verify_metadata(\n            catalog[\"metadata\"],\n            \"https://schemas.getdbt.com/dbt/catalog/v1.json\",\n            start_time,\n        )\n        assert not catalog[\"errors\"]\n        for key in \"nodes\", \"sources\":\n            for unique_id, expected_node in expected_catalog[key].items():\n                found_node = catalog[key][unique_id]\n                for node_key in expected_node:\n                    assert node_key in found_node\n>                   assert (\n                        found_node[node_key] == expected_node[node_key]\n                    ), f\"Key '{node_key}' in '{unique_id}' did not match\"\nE                   AssertionError: Key 'metadata' in 'seed.test.seed' did not match\nE                   assert {'comment': N...r': None, ...} == {'comment': N...r': None, ...}\nE                     Omitting 5 identical items, use -vv to show\nE                     Differing items:\nE                     {'type': 'DIMENSION'} != {'type': 'BASE TABLE'}\nE                     Full diff:\nE                       {\nE                        'comment': None,\nE                        'database': 'integration_testing__1722461861',\nE                        'name': 'seed',\nE                        'owner': None,\nE                        'schema': 'public',\nE                     -  'type': 'BASE TABLE',\nE                     +  'type': 'DIMENSION',\nE                       }\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/dbt/tests/adapter/basic/test_docs_generate.py:332: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"shared_data_dir","time":{"start":1722462129403,"stop":1722462129403,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tmpdir_factory","time":{"start":1722462129404,"stop":1722462129404,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_data_dir","time":{"start":1722462129404,"stop":1722462129404,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_root","time":{"start":1722462222539,"stop":1722462222539,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_root","time":{"start":1722462222539,"stop":1722462222540,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clean_up_logging","time":{"start":1722462222539,"stop":1722462222539,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_config_update","time":{"start":1722462222540,"stop":1722462222540,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"prefix","time":{"start":1722462222540,"stop":1722462222540,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"unique_schema","time":{"start":1722462222540,"stop":1722462222540,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dbt_profile_data","time":{"start":1722462222540,"stop":1722462222540,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_yml","time":{"start":1722462222540,"stop":1722462222541,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dbt_profile_target","time":{"start":1722462222540,"stop":1722462222540,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dbt_project_yml","time":{"start":1722462222541,"stop":1722462222542,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_config_update","time":{"start":1722462222541,"stop":1722462222541,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"packages_yml","time":{"start":1722462222542,"stop":1722462222542,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dependencies_yml","time":{"start":1722462222542,"stop":1722462222542,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dependencies","time":{"start":1722462222542,"stop":1722462222542,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"packages","time":{"start":1722462222542,"stop":1722462222542,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"selectors_yml","time":{"start":1722462222543,"stop":1722462222543,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"adapter","time":{"start":1722462222543,"stop":1722462222981,"duration":438},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"selectors","time":{"start":1722462222543,"stop":1722462222543,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"models","time":{"start":1722462222981,"stop":1722462222981,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"macros","time":{"start":1722462222981,"stop":1722462222981,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_files","time":{"start":1722462222982,"stop":1722462222983,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"snapshots","time":{"start":1722462222982,"stop":1722462222982,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"properties","time":{"start":1722462222982,"stop":1722462222982,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tests","time":{"start":1722462222982,"stop":1722462222982,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"analyses","time":{"start":1722462222982,"stop":1722462222982,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"seeds","time":{"start":1722462222982,"stop":1722462222982,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1722462222983,"stop":1722462223440,"duration":457},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"logs_dir","time":{"start":1722462222983,"stop":1722462222983,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_config","time":{"start":1722462222983,"stop":1722462222983,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1722462223440,"stop":1722462227189,"duration":3749},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profile_user","time":{"start":1722462227189,"stop":1722462227189,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"expected_catalog","time":{"start":1722462227189,"stop":1722462227189,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"unique_schema","time":{"start":1722462238651,"stop":1722462238651,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_config_update","time":{"start":1722462238653,"stop":1722462238653,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"seeds","time":{"start":1722462239179,"stop":1722462239179,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"snapshots","time":{"start":1722462239179,"stop":1722462239179,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"macros","time":{"start":1722462239179,"stop":1722462239179,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Key 'metadata' in 'seed.test.seed' did not match\nassert {'comment': N...r': None, ...} == {'comment': N...r': None, ...}\n  Omitting 5 identical items, use -vv to show\n  Differing items:\n  {'type': 'DIMENSION'} != {'type': 'BASE TABLE'}\n  Full diff:\n    {\n     'comment': None,\n     'database': 'integration_testing__1722461861',\n     'name': 'seed',\n     'owner': None,\n     'schema': 'public',\n  -  'type': 'BASE TABLE',\n  +  'type': 'DIMENSION',\n    }","statusTrace":"self = <test_basic.TestDocsGenReferencesFirebolt object at 0x7f1b679d1940>\nproject = <dbt.tests.fixtures.project.TestProjInfo object at 0x7f1b662eddc0>\nexpected_catalog = {'nodes': {'model.test.ephemeral_summary': {'columns': {'ct': {'comment': None, 'index': 2, 'name': 'ct', 'type': AnyS...e', 'id': 'has_stats', 'include': False, 'label': 'Has Stats?', ...}}, 'unique_id': 'source.test.my_source.my_table'}}}\n\n    def test_references(self, project, expected_catalog):\n        start_time = run_and_generate(project)\n>       verify_catalog(project, expected_catalog, start_time)\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/dbt/tests/adapter/basic/test_docs_generate.py:480: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nproject = <dbt.tests.fixtures.project.TestProjInfo object at 0x7f1b662eddc0>\nexpected_catalog = {'nodes': {'model.test.ephemeral_summary': {'columns': {'ct': {'comment': None, 'index': 2, 'name': 'ct', 'type': AnyS...e', 'id': 'has_stats', 'include': False, 'label': 'Has Stats?', ...}}, 'unique_id': 'source.test.my_source.my_table'}}}\nstart_time = datetime.datetime(2024, 7, 31, 21, 43, 50, 978753)\n\n    def verify_catalog(project, expected_catalog, start_time):\n        # get the catalog.json\n        catalog_path = os.path.join(project.project_root, \"target\", \"catalog.json\")\n        assert os.path.exists(catalog_path)\n        catalog = get_artifact(catalog_path)\n    \n        # verify the catalog\n        assert set(catalog) == {\"errors\", \"metadata\", \"nodes\", \"sources\"}\n        verify_metadata(\n            catalog[\"metadata\"],\n            \"https://schemas.getdbt.com/dbt/catalog/v1.json\",\n            start_time,\n        )\n        assert not catalog[\"errors\"]\n        for key in \"nodes\", \"sources\":\n            for unique_id, expected_node in expected_catalog[key].items():\n                found_node = catalog[key][unique_id]\n                for node_key in expected_node:\n                    assert node_key in found_node\n>                   assert (\n                        found_node[node_key] == expected_node[node_key]\n                    ), f\"Key '{node_key}' in '{unique_id}' did not match\"\nE                   AssertionError: Key 'metadata' in 'seed.test.seed' did not match\nE                   assert {'comment': N...r': None, ...} == {'comment': N...r': None, ...}\nE                     Omitting 5 identical items, use -vv to show\nE                     Differing items:\nE                     {'type': 'DIMENSION'} != {'type': 'BASE TABLE'}\nE                     Full diff:\nE                       {\nE                        'comment': None,\nE                        'database': 'integration_testing__1722461861',\nE                        'name': 'seed',\nE                        'owner': None,\nE                        'schema': 'public',\nE                     -  'type': 'BASE TABLE',\nE                     +  'type': 'DIMENSION',\nE                       }\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/dbt/tests/adapter/basic/test_docs_generate.py:332: AssertionError","steps":[],"attachments":[{"uid":"2a263555c73a67df","name":"log","source":"2a263555c73a67df.txt","type":"text/plain","size":31689},{"uid":"70d8b1086f09923c","name":"stdout","source":"70d8b1086f09923c.txt","type":"text/plain","size":2432}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"project::0","time":{"start":1722462232496,"stop":1722462238639,"duration":6143},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1722462232496,"stop":1722462232496,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"logs_dir::0","time":{"start":1722462238639,"stop":1722462238639,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"adapter::0","time":{"start":1722462238641,"stop":1722462238642,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_yml::0","time":{"start":1722462238644,"stop":1722462238644,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.functional.adapter"},{"name":"suite","value":"test_basic"},{"name":"subSuite","value":"TestDocsGenReferencesFirebolt"},{"name":"host","value":"fv-az692-463"},{"name":"thread","value":"2381-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.functional.adapter.test_basic"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b62684a0412fee72.json","parameterValues":[]}