"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"failed","Thu Aug 01 08:27:26 GMT 2024","Thu Aug 01 08:27:30 GMT 2024","3259","tests.functional.adapter.utils","test_data_types","TestTypeString","","","test_check_types_assert_match",""
"failed","Thu Aug 01 08:26:49 GMT 2024","Thu Aug 01 08:26:50 GMT 2024","935","tests.functional.adapter.incremental","test_incremental","TestUniqueKeyDeleteInsertFirebolt","","","test__bad_unique_key","expect compilation error from unique key not being a column"
"failed","Thu Aug 01 08:26:57 GMT 2024","Thu Aug 01 08:27:00 GMT 2024","2959","tests.functional.adapter.incremental","test_incremental","TestUniqueKeyDeleteInsertFirebolt","","","test__trinary_unique_key_list","with three unique keys, model will overwrite existing row"
"failed","Thu Aug 01 08:26:46 GMT 2024","Thu Aug 01 08:26:49 GMT 2024","2700","tests.functional.adapter.incremental","test_incremental","TestUniqueKeyDeleteInsertFirebolt","","","test__one_unique_key","with one unique key, model will overwrite existing row"
"failed","Thu Aug 01 08:25:36 GMT 2024","Thu Aug 01 08:25:39 GMT 2024","3310","tests.functional.adapter","test_basic","TestDocsGenerateFirebolt","","","test_run_and_generate",""
"failed","Thu Aug 01 08:26:33 GMT 2024","Thu Aug 01 08:26:40 GMT 2024","7213","tests.functional.adapter.incremental","test_incremental","TestIncrementalPredicatesDeleteInsertFirebolt","","","test__incremental_predicates","seed should match model after two incremental runs"
"failed","Thu Aug 01 08:27:13 GMT 2024","Thu Aug 01 08:27:16 GMT 2024","3031","tests.functional.adapter.utils","test_data_types","TestTypeInt","","","test_check_types_assert_match",""
"failed","Thu Aug 01 08:26:50 GMT 2024","Thu Aug 01 08:26:51 GMT 2024","1054","tests.functional.adapter.incremental","test_incremental","TestUniqueKeyDeleteInsertFirebolt","","","test__empty_unique_key_list","with no unique keys, seed and model should match"
"failed","Thu Aug 01 08:27:01 GMT 2024","Thu Aug 01 08:27:02 GMT 2024","1141","tests.functional.adapter.incremental","test_incremental","TestUniqueKeyDeleteInsertFirebolt","","","test__bad_unique_key_list","expect compilation error from unique key not being a column"
"failed","Thu Aug 01 08:26:45 GMT 2024","Thu Aug 01 08:26:46 GMT 2024","1044","tests.functional.adapter.incremental","test_incremental","TestUniqueKeyDeleteInsertFirebolt","","","test__empty_str_unique_key","with empty string for unique key, seed and model should match"
"failed","Thu Aug 01 08:25:33 GMT 2024","Thu Aug 01 08:25:36 GMT 2024","2544","tests.functional.adapter","test_basic","TestDocsGenerateFirebolt","","","test_run_and_generate_no_compile",""
"failed","Thu Aug 01 08:26:54 GMT 2024","Thu Aug 01 08:26:57 GMT 2024","2836","tests.functional.adapter.incremental","test_incremental","TestUniqueKeyDeleteInsertFirebolt","","","test__duplicated_unary_unique_key_list","with two of the same unique key, model will overwrite existing row"
"failed","Thu Aug 01 08:27:00 GMT 2024","Thu Aug 01 08:27:01 GMT 2024","991","tests.functional.adapter.incremental","test_incremental","TestUniqueKeyDeleteInsertFirebolt","","","test__trinary_unique_key_list_no_update","even with three unique keys, adding distinct rows to seed does not
        cause seed and model to diverge"
"failed","Thu Aug 01 08:25:14 GMT 2024","Thu Aug 01 08:25:20 GMT 2024","5820","tests.functional.adapter","test_basic","TestEphemeralFirebolt","","","test_ephemeral",""
"passed","Thu Aug 01 08:26:24 GMT 2024","Thu Aug 01 08:26:30 GMT 2024","5158","tests.functional.adapter.hooks","test_model_hooks","TestPrePostSnapshotHooksInConfigKwargsFirebolt","","","test_hooks_on_snapshots",""
"failed","Thu Aug 01 08:25:02 GMT 2024","Thu Aug 01 08:25:11 GMT 2024","8252","tests.functional.adapter","test_basic","TestSimpleMaterializationsFirebolt","","","test_base",""
"failed","Thu Aug 01 08:26:43 GMT 2024","Thu Aug 01 08:26:45 GMT 2024","1848","tests.functional.adapter.incremental","test_incremental","TestUniqueKeyDeleteInsertFirebolt","","","test__no_unique_keys","with no unique keys, seed and model should match"
"failed","Thu Aug 01 08:26:19 GMT 2024","Thu Aug 01 08:26:21 GMT 2024","2200","tests.functional.adapter","test_simple_copy","TestEmptyModelsArentRun","","","test_dbt_doesnt_run_empty_models",""
"failed","Thu Aug 01 08:27:33 GMT 2024","Thu Aug 01 08:27:36 GMT 2024","3112","tests.functional.adapter.utils","test_data_types","TestTypeTimestamp","","","test_check_types_assert_match",""
"failed","Thu Aug 01 08:26:51 GMT 2024","Thu Aug 01 08:26:54 GMT 2024","2698","tests.functional.adapter.incremental","test_incremental","TestUniqueKeyDeleteInsertFirebolt","","","test__unary_unique_key_list","with one unique key, model will overwrite existing row"
"failed","Thu Aug 01 08:25:23 GMT 2024","Thu Aug 01 08:25:27 GMT 2024","3237","tests.functional.adapter","test_basic","TestIncrementalFirebolt","","","test_incremental",""
"failed","Thu Aug 01 08:26:03 GMT 2024","Thu Aug 01 08:26:05 GMT 2024","2148","tests.functional.adapter","test_concurrency","TestConcurrencyFirebolt","","","test_concurrency",""
"failed","Thu Aug 01 08:26:08 GMT 2024","Thu Aug 01 08:26:10 GMT 2024","2224","tests.functional.adapter","test_ephemeral","TestEphemeralMultiFirebolt","","","test_ephemeral_multi",""
"failed","Thu Aug 01 08:26:14 GMT 2024","Thu Aug 01 08:26:16 GMT 2024","2130","tests.functional.adapter","test_simple_copy","TestSimpleCopyBase","","","test_simple_copy",""
"failed","Thu Aug 01 08:27:19 GMT 2024","Thu Aug 01 08:27:23 GMT 2024","3966","tests.functional.adapter.utils","test_data_types","TestTypeNumeric","","","test_check_types_assert_match",""
"failed","Thu Aug 01 08:25:57 GMT 2024","Thu Aug 01 08:25:59 GMT 2024","2325","tests.functional.adapter","test_concurrency","TestConcurenncy","","","test_concurrency",""
"failed","Thu Aug 01 08:25:48 GMT 2024","Thu Aug 01 08:25:51 GMT 2024","3376","tests.functional.adapter","test_basic","TestDocsGenReferencesFirebolt","","","test_references",""
"passed","Thu Aug 01 08:27:05 GMT 2024","Thu Aug 01 08:27:09 GMT 2024","4195","tests.functional.adapter.utils","test_data_types","TestTypeFloat","","","test_check_types_assert_match",""
