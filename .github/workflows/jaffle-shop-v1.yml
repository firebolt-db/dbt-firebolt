name: Core integration tests

on:
  workflow_dispatch:
    inputs:
      tag_version:
        description: 'The docker image tag for the firebolt core'
        required: false
        type: string
      python_version:
        description: 'Python version'
        required: false
        type: string
        default: '3.10'
      os_name:
        description: 'The operating system'
        required: false
        type: string
        default: 'ubuntu-latest'
  workflow_call:
    inputs:
      tag_version:
        description: 'The docker image tag for the firebolt core'
        required: false
        type: string
      python_version:
        description: 'Python version'
        required: false
        type: string
        default: '3.10'
      os_name:
        description: 'Operating system'
        required: false
        type: string
        default: 'ubuntu-latest'
      sendSlackNotifications:
        description: 'Send Slack notifications on failure'
        required: false
        type: boolean
        default: false
    secrets:
      SLACK_BOT_TOKEN:
        required: false
jobs:
  run-core-integration-tests:
    runs-on: ${{ inputs.os_name }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e ".[dev]" --no-cache-dir

      - name: Setup Firebolt Core
        id: setup-core
        uses: firebolt-db/action-setup-core@main
        with:
            tag_version: ${{ inputs.tag_version || vars.DEFAULT_CORE_IMAGE_TAG }}

      - name: Run integration tests HTTP
        env:
          SERVICE_ID: ""
          SERVICE_SECRET: ""
          DATABASE_NAME: "firebolt"
          ENGINE_NAME: ""
          API_ENDPOINT: ""
          ACCOUNT_NAME: ""
          CORE_URL: ${{ steps.setup-core.outputs.service_url }}
        run: |
          pytest --last-failed -o log_cli=true -o log_cli_level=INFO tests/functional/ --alluredir=allure-results

      - name: Allure Report
        uses: firebolt-db/action-allure-report@v1
        if: always()
        continue-on-error: true
        with:
          github-key: ${{ secrets.GITHUB_TOKEN }}
          test-type: integration_core
          allure-dir: allure-results
          pages-branch: gh-pages
          repository-name: dbt-firebolt
