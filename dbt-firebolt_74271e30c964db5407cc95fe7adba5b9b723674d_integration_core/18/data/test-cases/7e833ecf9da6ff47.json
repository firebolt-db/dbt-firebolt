{"uid":"7e833ecf9da6ff47","name":"test_tests_run_successfully_and_are_stored_as_expected","fullName":"tests.functional.adapter.test_store_test_failures.TestStoreTestFailuresAsInteractions#test_tests_run_successfully_and_are_stored_as_expected","historyId":"e843571c528bbc766a0fd347f45290d0","time":{"start":1753453472321,"stop":1753453473639,"duration":1318},"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_store_test_failures.TestStoreTestFailuresAsInteractions object at 0x7f959f4d0df0>\nproject = <dbt.tests.fixtures.project.TestProjInfo object at 0x7f959673e440>\n\n    def test_tests_run_successfully_and_are_stored_as_expected(self, project):\n        expected_results = {\n            TestResult(\"view_unset_pass\", TestStatus.Pass, \"view\"),  # control\n            TestResult(\"view_true\", TestStatus.Fail, \"view\"),\n            TestResult(\"view_false\", TestStatus.Fail, \"view\"),\n            TestResult(\"view_unset\", TestStatus.Fail, \"view\"),\n            TestResult(\"table_true\", TestStatus.Fail, \"table\"),\n            TestResult(\"table_false\", TestStatus.Fail, \"table\"),\n            TestResult(\"table_unset\", TestStatus.Fail, \"table\"),\n            TestResult(\"ephemeral_true\", TestStatus.Fail, None),\n            TestResult(\"ephemeral_false\", TestStatus.Fail, None),\n            TestResult(\"ephemeral_unset\", TestStatus.Fail, None),\n            TestResult(\"unset_true\", TestStatus.Fail, \"table\"),\n            TestResult(\"unset_false\", TestStatus.Fail, None),\n            TestResult(\"unset_unset\", TestStatus.Fail, None),\n        }\n>       self.run_and_assert(project, expected_results)\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/dbt/tests/adapter/store_test_failures_tests/basic.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_store_test_failures.TestStoreTestFailuresAsInteractions object at 0x7f959f4d0df0>\nproject = <dbt.tests.fixtures.project.TestProjInfo object at 0x7f959673e440>\nexpected_results = {TestResult(name='ephemeral_false', status=<TestStatus.Fail: 'fail'>, type=None), TestResult(name='ephemeral_true', st...atus.Fail: 'fail'>, type='table'), TestResult(name='table_unset', status=<TestStatus.Fail: 'fail'>, type='table'), ...}\nexpect_pass = False\n\n    def run_and_assert(\n        self, project, expected_results: Set[TestResult], expect_pass: bool = False\n    ) -> None:\n        \"\"\"\n        Run `dbt test` and assert the results are the expected results\n    \n        Args:\n            project: the `project` fixture; needed since we invoke `run_dbt`\n            expected_results: the expected results of the tests as instances of TestResult\n            expect_pass: passed directly into `run_dbt`; this is only needed if all expected results are tests that pass\n    \n        Returns:\n            the row count as an integer\n        \"\"\"\n        # run the tests\n        results = run_dbt([\"test\"], expect_pass=expect_pass)\n    \n        # show that the statuses are what we expect\n        actual = {(result.node.name, result.status) for result in results}\n        expected = {(result.name, result.status) for result in expected_results}\n>       assert actual == expected\nE       AssertionError\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/dbt/tests/adapter/store_test_failures_tests/basic.py:76: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"tmpdir_factory","time":{"start":1753453390221,"stop":1753453390221,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shared_data_dir","time":{"start":1753453390221,"stop":1753453390221,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_data_dir","time":{"start":1753453471199,"stop":1753453471199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"environment","time":{"start":1753453471199,"stop":1753453471199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"initialization","time":{"start":1753453471200,"stop":1753453471200,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clean_up_logging","time":{"start":1753453471200,"stop":1753453471200,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_root","time":{"start":1753453471200,"stop":1753453471200,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dbt_profile_target","time":{"start":1753453471201,"stop":1753453471201,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dbt_profile_data","time":{"start":1753453471201,"stop":1753453471202,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"prefix","time":{"start":1753453471201,"stop":1753453471201,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_root","time":{"start":1753453471201,"stop":1753453471201,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"unique_schema","time":{"start":1753453471201,"stop":1753453471201,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_config_update","time":{"start":1753453471201,"stop":1753453471201,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_yml","time":{"start":1753453471202,"stop":1753453471202,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"logs_dir","time":{"start":1753453471203,"stop":1753453471203,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dbt_project_yml","time":{"start":1753453471203,"stop":1753453471204,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_config_update","time":{"start":1753453471203,"stop":1753453471203,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"is_firebolt_core","time":{"start":1753453471203,"stop":1753453471203,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"adapter","time":{"start":1753453471204,"stop":1753453471238,"duration":34},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_setup","time":{"start":1753453471239,"stop":1753453471298,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_config","time":{"start":1753453471239,"stop":1753453471239,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"properties","time":{"start":1753453471298,"stop":1753453471298,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"models","time":{"start":1753453471298,"stop":1753453471298,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"seeds","time":{"start":1753453471298,"stop":1753453471298,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"snapshots","time":{"start":1753453471298,"stop":1753453471298,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"macros","time":{"start":1753453471298,"stop":1753453471298,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"packages","time":{"start":1753453471299,"stop":1753453471299,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dependencies_yml","time":{"start":1753453471299,"stop":1753453471299,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dependencies","time":{"start":1753453471299,"stop":1753453471299,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"selectors","time":{"start":1753453471299,"stop":1753453471299,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"selectors_yml","time":{"start":1753453471299,"stop":1753453471299,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"analyses","time":{"start":1753453471299,"stop":1753453471299,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tests","time":{"start":1753453471299,"stop":1753453471299,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"packages_yml","time":{"start":1753453471299,"stop":1753453471299,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_files","time":{"start":1753453471299,"stop":1753453471300,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_class","time":{"start":1753453471300,"stop":1753453471900,"duration":600},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1753453471300,"stop":1753453471300,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_method","time":{"start":1753453471900,"stop":1753453472320,"duration":420},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"teardown_method","time":{"start":1753453472320,"stop":1753453472320,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tests","time":{"start":1753453476835,"stop":1753453476835,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"seeds","time":{"start":1753453482643,"stop":1753453482643,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_store_test_failures.TestStoreTestFailuresAsInteractions object at 0x7f959f4d0df0>\nproject = <dbt.tests.fixtures.project.TestProjInfo object at 0x7f959673e440>\n\n    def test_tests_run_successfully_and_are_stored_as_expected(self, project):\n        expected_results = {\n            TestResult(\"view_unset_pass\", TestStatus.Pass, \"view\"),  # control\n            TestResult(\"view_true\", TestStatus.Fail, \"view\"),\n            TestResult(\"view_false\", TestStatus.Fail, \"view\"),\n            TestResult(\"view_unset\", TestStatus.Fail, \"view\"),\n            TestResult(\"table_true\", TestStatus.Fail, \"table\"),\n            TestResult(\"table_false\", TestStatus.Fail, \"table\"),\n            TestResult(\"table_unset\", TestStatus.Fail, \"table\"),\n            TestResult(\"ephemeral_true\", TestStatus.Fail, None),\n            TestResult(\"ephemeral_false\", TestStatus.Fail, None),\n            TestResult(\"ephemeral_unset\", TestStatus.Fail, None),\n            TestResult(\"unset_true\", TestStatus.Fail, \"table\"),\n            TestResult(\"unset_false\", TestStatus.Fail, None),\n            TestResult(\"unset_unset\", TestStatus.Fail, None),\n        }\n>       self.run_and_assert(project, expected_results)\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/dbt/tests/adapter/store_test_failures_tests/basic.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_store_test_failures.TestStoreTestFailuresAsInteractions object at 0x7f959f4d0df0>\nproject = <dbt.tests.fixtures.project.TestProjInfo object at 0x7f959673e440>\nexpected_results = {TestResult(name='ephemeral_false', status=<TestStatus.Fail: 'fail'>, type=None), TestResult(name='ephemeral_true', st...atus.Fail: 'fail'>, type='table'), TestResult(name='table_unset', status=<TestStatus.Fail: 'fail'>, type='table'), ...}\nexpect_pass = False\n\n    def run_and_assert(\n        self, project, expected_results: Set[TestResult], expect_pass: bool = False\n    ) -> None:\n        \"\"\"\n        Run `dbt test` and assert the results are the expected results\n    \n        Args:\n            project: the `project` fixture; needed since we invoke `run_dbt`\n            expected_results: the expected results of the tests as instances of TestResult\n            expect_pass: passed directly into `run_dbt`; this is only needed if all expected results are tests that pass\n    \n        Returns:\n            the row count as an integer\n        \"\"\"\n        # run the tests\n        results = run_dbt([\"test\"], expect_pass=expect_pass)\n    \n        # show that the statuses are what we expect\n        actual = {(result.node.name, result.status) for result in results}\n        expected = {(result.name, result.status) for result in expected_results}\n>       assert actual == expected\nE       AssertionError\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/dbt/tests/adapter/store_test_failures_tests/basic.py:76: AssertionError","steps":[],"attachments":[{"uid":"997db9818986b9e1","name":"log","source":"997db9818986b9e1.txt","type":"text/plain","size":31532},{"uid":"ac2365af05c9c8ad","name":"stdout","source":"ac2365af05c9c8ad.txt","type":"text/plain","size":10453},{"uid":"61666ae5ea4b35ee","name":"stderr","source":"61666ae5ea4b35ee.txt","type":"text/plain","size":26399}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"teardown_method::0","time":{"start":1753453473646,"stop":1753453474077,"duration":431},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_class::0","time":{"start":1753453474077,"stop":1753453474077,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_method::0","time":{"start":1753453474077,"stop":1753453474077,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_setup::0","time":{"start":1753453474081,"stop":1753453474601,"duration":520},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"adapter::0","time":{"start":1753453474602,"stop":1753453474602,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"logs_dir::0","time":{"start":1753453474603,"stop":1753453474603,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_yml::0","time":{"start":1753453474603,"stop":1753453474603,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.functional.adapter"},{"name":"suite","value":"test_store_test_failures"},{"name":"subSuite","value":"TestStoreTestFailuresAsInteractions"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"4480-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.functional.adapter.test_store_test_failures"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"7e833ecf9da6ff47.json","parameterValues":[]}