{"uid":"c54859e21bad588b","name":"test_tests_run_successfully_and_are_stored_as_expected","fullName":"tests.functional.adapter.test_store_test_failures.TestStoreTestFailuresAsGeneric#test_tests_run_successfully_and_are_stored_as_expected","historyId":"0a081f902badb3f26630a7e6814fcc8e","time":{"start":1753453477813,"stop":1753453478419,"duration":606},"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_store_test_failures.TestStoreTestFailuresAsGeneric object at 0x7f959f5db0a0>\nproject = <dbt.tests.fixtures.project.TestProjInfo object at 0x7f95a04b34c0>\n\n    def test_tests_run_successfully_and_are_stored_as_expected(self, project):\n        expected_results = {\n            # `store_failures` unset, `store_failures_as = \"view\"`\n            TestResult(\"not_null_chipmunks_name\", TestStatus.Pass, \"view\"),\n            # `store_failures = False`, `store_failures_as = \"table\"`\n            TestResult(\n                \"accepted_values_chipmunks_name__alvin__simon__theodore\", TestStatus.Fail, \"table\"\n            ),\n            # `store_failures = True`, `store_failures_as = \"view\"`\n            TestResult(\"not_null_chipmunks_shirt\", TestStatus.Fail, \"view\"),\n        }\n>       self.run_and_assert(project, expected_results)\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/dbt/tests/adapter/store_test_failures_tests/basic.py:282: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_store_test_failures.TestStoreTestFailuresAsGeneric object at 0x7f959f5db0a0>\nproject = <dbt.tests.fixtures.project.TestProjInfo object at 0x7f95a04b34c0>\nexpected_results = {TestResult(name='accepted_values_chipmunks_name__alvin__simon__theodore', status=<TestStatus.Fail: 'fail'>, type='tab...ass: 'pass'>, type='view'), TestResult(name='not_null_chipmunks_shirt', status=<TestStatus.Fail: 'fail'>, type='view')}\nexpect_pass = False\n\n    def run_and_assert(\n        self, project, expected_results: Set[TestResult], expect_pass: bool = False\n    ) -> None:\n        \"\"\"\n        Run `dbt test` and assert the results are the expected results\n    \n        Args:\n            project: the `project` fixture; needed since we invoke `run_dbt`\n            expected_results: the expected results of the tests as instances of TestResult\n            expect_pass: passed directly into `run_dbt`; this is only needed if all expected results are tests that pass\n    \n        Returns:\n            the row count as an integer\n        \"\"\"\n        # run the tests\n        results = run_dbt([\"test\"], expect_pass=expect_pass)\n    \n        # show that the statuses are what we expect\n        actual = {(result.node.name, result.status) for result in results}\n        expected = {(result.name, result.status) for result in expected_results}\n>       assert actual == expected\nE       AssertionError\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/dbt/tests/adapter/store_test_failures_tests/basic.py:76: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"tmpdir_factory","time":{"start":1753453390221,"stop":1753453390221,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shared_data_dir","time":{"start":1753453390221,"stop":1753453390221,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_data_dir","time":{"start":1753453471199,"stop":1753453471199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_root","time":{"start":1753453476578,"stop":1753453476579,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"initialization","time":{"start":1753453476578,"stop":1753453476578,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"environment","time":{"start":1753453476578,"stop":1753453476578,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clean_up_logging","time":{"start":1753453476578,"stop":1753453476578,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_root","time":{"start":1753453476579,"stop":1753453476579,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"prefix","time":{"start":1753453476579,"stop":1753453476580,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dbt_profile_data","time":{"start":1753453476580,"stop":1753453476580,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_config_update","time":{"start":1753453476580,"stop":1753453476580,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"unique_schema","time":{"start":1753453476580,"stop":1753453476580,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_yml","time":{"start":1753453476580,"stop":1753453476581,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dbt_profile_target","time":{"start":1753453476580,"stop":1753453476580,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"is_firebolt_core","time":{"start":1753453476581,"stop":1753453476581,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dbt_project_yml","time":{"start":1753453476581,"stop":1753453476582,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_config_update","time":{"start":1753453476581,"stop":1753453476581,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"logs_dir","time":{"start":1753453476581,"stop":1753453476581,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"adapter","time":{"start":1753453476582,"stop":1753453476615,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_config","time":{"start":1753453476615,"stop":1753453476615,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_setup","time":{"start":1753453476615,"stop":1753453476834,"duration":219},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"macros","time":{"start":1753453476834,"stop":1753453476834,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"models","time":{"start":1753453476834,"stop":1753453476834,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"packages","time":{"start":1753453476835,"stop":1753453476835,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"seeds","time":{"start":1753453476835,"stop":1753453476835,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tests","time":{"start":1753453476835,"stop":1753453476835,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"snapshots","time":{"start":1753453476835,"stop":1753453476835,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dependencies","time":{"start":1753453476835,"stop":1753453476835,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"analyses","time":{"start":1753453476835,"stop":1753453476835,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"properties","time":{"start":1753453476835,"stop":1753453476835,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dependencies_yml","time":{"start":1753453476835,"stop":1753453476835,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"selectors_yml","time":{"start":1753453476835,"stop":1753453476835,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"selectors","time":{"start":1753453476835,"stop":1753453476835,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"packages_yml","time":{"start":1753453476835,"stop":1753453476835,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_files","time":{"start":1753453476836,"stop":1753453476836,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1753453476836,"stop":1753453476836,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_class","time":{"start":1753453476836,"stop":1753453477395,"duration":559},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_method","time":{"start":1753453477395,"stop":1753453477812,"duration":417},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"teardown_method","time":{"start":1753453477812,"stop":1753453477812,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"seeds","time":{"start":1753453482643,"stop":1753453482643,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_store_test_failures.TestStoreTestFailuresAsGeneric object at 0x7f959f5db0a0>\nproject = <dbt.tests.fixtures.project.TestProjInfo object at 0x7f95a04b34c0>\n\n    def test_tests_run_successfully_and_are_stored_as_expected(self, project):\n        expected_results = {\n            # `store_failures` unset, `store_failures_as = \"view\"`\n            TestResult(\"not_null_chipmunks_name\", TestStatus.Pass, \"view\"),\n            # `store_failures = False`, `store_failures_as = \"table\"`\n            TestResult(\n                \"accepted_values_chipmunks_name__alvin__simon__theodore\", TestStatus.Fail, \"table\"\n            ),\n            # `store_failures = True`, `store_failures_as = \"view\"`\n            TestResult(\"not_null_chipmunks_shirt\", TestStatus.Fail, \"view\"),\n        }\n>       self.run_and_assert(project, expected_results)\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/dbt/tests/adapter/store_test_failures_tests/basic.py:282: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_store_test_failures.TestStoreTestFailuresAsGeneric object at 0x7f959f5db0a0>\nproject = <dbt.tests.fixtures.project.TestProjInfo object at 0x7f95a04b34c0>\nexpected_results = {TestResult(name='accepted_values_chipmunks_name__alvin__simon__theodore', status=<TestStatus.Fail: 'fail'>, type='tab...ass: 'pass'>, type='view'), TestResult(name='not_null_chipmunks_shirt', status=<TestStatus.Fail: 'fail'>, type='view')}\nexpect_pass = False\n\n    def run_and_assert(\n        self, project, expected_results: Set[TestResult], expect_pass: bool = False\n    ) -> None:\n        \"\"\"\n        Run `dbt test` and assert the results are the expected results\n    \n        Args:\n            project: the `project` fixture; needed since we invoke `run_dbt`\n            expected_results: the expected results of the tests as instances of TestResult\n            expect_pass: passed directly into `run_dbt`; this is only needed if all expected results are tests that pass\n    \n        Returns:\n            the row count as an integer\n        \"\"\"\n        # run the tests\n        results = run_dbt([\"test\"], expect_pass=expect_pass)\n    \n        # show that the statuses are what we expect\n        actual = {(result.node.name, result.status) for result in results}\n        expected = {(result.name, result.status) for result in expected_results}\n>       assert actual == expected\nE       AssertionError\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/dbt/tests/adapter/store_test_failures_tests/basic.py:76: AssertionError","steps":[],"attachments":[{"uid":"793dfbd6372a463","name":"log","source":"793dfbd6372a463.txt","type":"text/plain","size":26185},{"uid":"731c8c429d1d58dd","name":"stdout","source":"731c8c429d1d58dd.txt","type":"text/plain","size":4320},{"uid":"a7c7d9d470c267b3","name":"stderr","source":"a7c7d9d470c267b3.txt","type":"text/plain","size":21910}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"teardown_method::0","time":{"start":1753453478425,"stop":1753453478821,"duration":396},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_method::0","time":{"start":1753453478821,"stop":1753453478821,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_class::0","time":{"start":1753453478821,"stop":1753453478821,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_setup::0","time":{"start":1753453478825,"stop":1753453479154,"duration":329},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"adapter::0","time":{"start":1753453479155,"stop":1753453479155,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"logs_dir::0","time":{"start":1753453479156,"stop":1753453479156,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_yml::0","time":{"start":1753453479157,"stop":1753453479157,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.functional.adapter"},{"name":"suite","value":"test_store_test_failures"},{"name":"subSuite","value":"TestStoreTestFailuresAsGeneric"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"4480-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.functional.adapter.test_store_test_failures"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c54859e21bad588b.json","parameterValues":[]}