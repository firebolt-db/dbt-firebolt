{"uid":"8b2b12da694d862d","name":"test__one_unique_key","fullName":"tests.functional.adapter.incremental.test_incremental.TestUniqueKeyDeleteInsertFirebolt#test__one_unique_key","historyId":"a35d0d6dd148bfdabfb26152280c970c","time":{"start":1753453499749,"stop":1753453500269,"duration":520},"description":"with one unique key, model will overwrite existing row","descriptionHtml":"<p>with one unique key, model will overwrite existing row</p>\n","status":"failed","statusMessage":"AssertionError: dbt exit state did not match expected","statusTrace":"self = <test_incremental.TestUniqueKeyDeleteInsertFirebolt object at 0x7f959f4f1c90>\nproject = <dbt.tests.fixtures.project.TestProjInfo object at 0x7f9596b05ff0>\n\n    def test__one_unique_key(self, project):\n        \"\"\"with one unique key, model will overwrite existing row\"\"\"\n    \n        expected_fields = self.get_expected_fields(\n            relation=\"one_str__overwrite\", seed_rows=8, opt_model_count=1\n        )\n        test_case_fields = self.get_test_fields(\n            project,\n            seed=\"seed\",\n            incremental_model=\"str_unique_key\",\n            update_sql_file=\"duplicate_insert\",\n>           opt_model_count=self.update_incremental_model(\"one_str__overwrite\"),\n        )\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/dbt/tests/adapter/incremental/test_incremental_unique_id.py:477: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/dbt/tests/adapter/incremental/test_incremental_unique_id.py:367: in update_incremental_model\n    model_result_set = run_dbt([\"run\", \"--select\", incremental_model])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = ['run', '--select', 'one_str__overwrite', '--project-dir', '/tmp/pytest-of-runner/pytest-0/project59', '--profiles-dir', ...]\nexpect_pass = True, callbacks = None\n\n    def run_dbt(\n        args: Optional[List[str]] = None,\n        expect_pass: bool = True,\n        callbacks: Optional[List[Callable[[EventMsg], None]]] = None,\n    ):\n        # reset global vars\n        reset_metadata_vars()\n    \n        if args is None:\n            args = [\"run\"]\n    \n        print(\"\\n\\nInvoking dbt with {}\".format(args))\n        from dbt.flags import get_flags\n    \n        flags = get_flags()\n        project_dir = getattr(flags, \"PROJECT_DIR\", None)\n        profiles_dir = getattr(flags, \"PROFILES_DIR\", None)\n        if project_dir and \"--project-dir\" not in args:\n            args.extend([\"--project-dir\", project_dir])\n        if profiles_dir and \"--profiles-dir\" not in args:\n            args.extend([\"--profiles-dir\", profiles_dir])\n        dbt = dbtRunner(callbacks=callbacks)\n    \n        res = dbt.invoke(args)\n    \n        # the exception is immediately raised to be caught in tests\n        # using a pattern like `with pytest.raises(SomeException):`\n        if res.exception is not None:\n            raise res.exception\n    \n        if expect_pass is not None:\n>           assert res.success == expect_pass, \"dbt exit state did not match expected\"\nE           AssertionError: dbt exit state did not match expected\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/dbt/tests/util.py:107: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"tmpdir_factory","time":{"start":1753453390221,"stop":1753453390221,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shared_data_dir","time":{"start":1753453390221,"stop":1753453390221,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_data_dir","time":{"start":1753453497074,"stop":1753453497074,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"environment","time":{"start":1753453498136,"stop":1753453498136,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_root","time":{"start":1753453498137,"stop":1753453498138,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clean_up_logging","time":{"start":1753453498137,"stop":1753453498137,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"initialization","time":{"start":1753453498137,"stop":1753453498137,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"unique_schema","time":{"start":1753453498138,"stop":1753453498138,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"prefix","time":{"start":1753453498138,"stop":1753453498138,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_root","time":{"start":1753453498138,"stop":1753453498138,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_yml","time":{"start":1753453498139,"stop":1753453498140,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_config_update","time":{"start":1753453498139,"stop":1753453498139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dbt_profile_target","time":{"start":1753453498139,"stop":1753453498139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dbt_profile_data","time":{"start":1753453498139,"stop":1753453498139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dbt_project_yml","time":{"start":1753453498140,"stop":1753453498140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_config_update","time":{"start":1753453498140,"stop":1753453498140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"logs_dir","time":{"start":1753453498140,"stop":1753453498140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"adapter","time":{"start":1753453498141,"stop":1753453498172,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_config","time":{"start":1753453498172,"stop":1753453498172,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_setup","time":{"start":1753453498172,"stop":1753453498229,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"selectors","time":{"start":1753453498230,"stop":1753453498230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dependencies","time":{"start":1753453498230,"stop":1753453498230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dependencies_yml","time":{"start":1753453498230,"stop":1753453498230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"analyses","time":{"start":1753453498230,"stop":1753453498230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"properties","time":{"start":1753453498230,"stop":1753453498230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"selectors_yml","time":{"start":1753453498230,"stop":1753453498230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"models","time":{"start":1753453498230,"stop":1753453498230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"snapshots","time":{"start":1753453498230,"stop":1753453498230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"seeds","time":{"start":1753453498230,"stop":1753453498230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"macros","time":{"start":1753453498230,"stop":1753453498230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tests","time":{"start":1753453498230,"stop":1753453498230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"packages","time":{"start":1753453498231,"stop":1753453498231,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"packages_yml","time":{"start":1753453498231,"stop":1753453498231,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_files","time":{"start":1753453498231,"stop":1753453498232,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1753453498232,"stop":1753453498232,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clean_up","time":{"start":1753453499748,"stop":1753453499748,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_config_update","time":{"start":1753453506121,"stop":1753453506121,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"seeds","time":{"start":1753453506211,"stop":1753453506211,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"with one unique key, model will overwrite existing row","status":"failed","statusMessage":"AssertionError: dbt exit state did not match expected","statusTrace":"self = <test_incremental.TestUniqueKeyDeleteInsertFirebolt object at 0x7f959f4f1c90>\nproject = <dbt.tests.fixtures.project.TestProjInfo object at 0x7f9596b05ff0>\n\n    def test__one_unique_key(self, project):\n        \"\"\"with one unique key, model will overwrite existing row\"\"\"\n    \n        expected_fields = self.get_expected_fields(\n            relation=\"one_str__overwrite\", seed_rows=8, opt_model_count=1\n        )\n        test_case_fields = self.get_test_fields(\n            project,\n            seed=\"seed\",\n            incremental_model=\"str_unique_key\",\n            update_sql_file=\"duplicate_insert\",\n>           opt_model_count=self.update_incremental_model(\"one_str__overwrite\"),\n        )\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/dbt/tests/adapter/incremental/test_incremental_unique_id.py:477: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/dbt/tests/adapter/incremental/test_incremental_unique_id.py:367: in update_incremental_model\n    model_result_set = run_dbt([\"run\", \"--select\", incremental_model])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = ['run', '--select', 'one_str__overwrite', '--project-dir', '/tmp/pytest-of-runner/pytest-0/project59', '--profiles-dir', ...]\nexpect_pass = True, callbacks = None\n\n    def run_dbt(\n        args: Optional[List[str]] = None,\n        expect_pass: bool = True,\n        callbacks: Optional[List[Callable[[EventMsg], None]]] = None,\n    ):\n        # reset global vars\n        reset_metadata_vars()\n    \n        if args is None:\n            args = [\"run\"]\n    \n        print(\"\\n\\nInvoking dbt with {}\".format(args))\n        from dbt.flags import get_flags\n    \n        flags = get_flags()\n        project_dir = getattr(flags, \"PROJECT_DIR\", None)\n        profiles_dir = getattr(flags, \"PROFILES_DIR\", None)\n        if project_dir and \"--project-dir\" not in args:\n            args.extend([\"--project-dir\", project_dir])\n        if profiles_dir and \"--profiles-dir\" not in args:\n            args.extend([\"--profiles-dir\", profiles_dir])\n        dbt = dbtRunner(callbacks=callbacks)\n    \n        res = dbt.invoke(args)\n    \n        # the exception is immediately raised to be caught in tests\n        # using a pattern like `with pytest.raises(SomeException):`\n        if res.exception is not None:\n            raise res.exception\n    \n        if expect_pass is not None:\n>           assert res.success == expect_pass, \"dbt exit state did not match expected\"\nE           AssertionError: dbt exit state did not match expected\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/dbt/tests/util.py:107: AssertionError","steps":[],"attachments":[{"uid":"a072935e21457627","name":"log","source":"a072935e21457627.txt","type":"text/plain","size":10154},{"uid":"65887eaa59030bc8","name":"stdout","source":"65887eaa59030bc8.txt","type":"text/plain","size":1495},{"uid":"b64d290f89bbf8d9","name":"stderr","source":"b64d290f89bbf8d9.txt","type":"text/plain","size":8501}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"clean_up::0","time":{"start":1753453500282,"stop":1753453500612,"duration":330},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_setup::0","time":{"start":1753453505773,"stop":1753453506105,"duration":332},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"adapter::0","time":{"start":1753453506106,"stop":1753453506106,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"logs_dir::0","time":{"start":1753453506107,"stop":1753453506107,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"profiles_yml::0","time":{"start":1753453506108,"stop":1753453506108,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.functional.adapter.incremental"},{"name":"suite","value":"test_incremental"},{"name":"subSuite","value":"TestUniqueKeyDeleteInsertFirebolt"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"4480-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.functional.adapter.incremental.test_incremental"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"8b2b12da694d862d.json","parameterValues":[]}